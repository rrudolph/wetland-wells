approx(x, y, xout=59)
approx(x, y, xout=2)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated)
View(working_table)
View(psi_interpolated)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
View(working_table)
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
# filter(Well == well) %>%
# filter(DateTime == dateTime) %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
wellSelect
View(wellSelect)
View(well_stats)
wellData <- read_csv("All_well_data_combined.csv",
col_types = cols(`Barometric Pressure (PSI)` = col_skip(),
`Date and Time` = col_datetime(format = "%m/%d/%Y %H:%M:%S %p"),
`Depth (ft)` = col_skip(),
Seconds = col_skip(),
`Temperature (C)` = col_skip(),
`Unnamed: 5` = col_skip(),
`Unnamed: 6` = col_skip()))
# Rename the fields
names(wellData) <- c('DateTime', 'PSI', 'Well' )
# Format the date field
wellData$Date <- format(wellData$DateTime, "%m-%d-%Y")
wellData$Date<- as.Date(wellData$Date, format="%m-%d-%Y")
# Get the stats for each well needed to perform the calculations
well_stats <- read_excel("Well Stats.xlsx")
# Function to extract stats from the well stats table
get_stat <- function(stat, wellName){
return_stat <- well_stats %>%
filter(Well == !!wellName) %>%
pull(stat)
return(return_stat)
}
get_psi <-  function(wellName, dateTime){
return_stat <- wellData %>%
filter(Well == !!wellName) %>%
filter(DateTime == !!dateTime) %>%
pull(PSI)
return(return_stat)
}
options(scipen=999)
well = "PH6"
dateTime_start = ymd_hms("2019-04-29-12-00-00")
dateTime_end = ymd_hms("2019-04-29-13-00-00")
handReading_ft = 1.78
handReading_minute = 35
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60)
y <- c(min_val, max_val)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
# filter(Well == well) %>%
# filter(DateTime == dateTime) %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
wellSelect
View(wellSelect)
well = "PH6"
dateTime_start = ymd_hms("2009-03-24-13-00-00")
dateTime_end = ymd_hms("2009-03-24-14-00-00")
handReading_ft = 4.78
handReading_minute = 34
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60)
y <- c(min_val, max_val)
well = "PH6"
dateTime_start = ymd_hms("2015-12-28-12-00-00")
dateTime_end = ymd_hms("2015-12-28-13-00-00")
handReading_ft = 4.36
handReading_minute = 21
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60)
y <- c(min_val, max_val)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
# filter(Well == well) %>%
# filter(DateTime == dateTime) %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
wellSelect
View(wellSelect)
library(tidyverse)
library(readxl)
library(lubridate)
library(glue)
wellData <- read_csv("All_well_data_combined.csv",
col_types = cols(`Barometric Pressure (PSI)` = col_skip(),
`Date and Time` = col_datetime(format = "%m/%d/%Y %H:%M:%S %p"),
`Depth (ft)` = col_skip(),
Seconds = col_skip(),
`Temperature (C)` = col_skip(),
`Unnamed: 5` = col_skip(),
`Unnamed: 6` = col_skip()))
# Rename the fields
names(wellData) <- c('DateTime', 'PSI', 'Well' )
# Format the date field
wellData$Date <- format(wellData$DateTime, "%m-%d-%Y")
wellData$Date<- as.Date(wellData$Date, format="%m-%d-%Y")
# Get the stats for each well needed to perform the calculations
well_stats <- read_excel("Well Stats.xlsx")
# Function to extract stats from the well stats table
get_stat <- function(stat, wellName){
return_stat <- well_stats %>%
filter(Well == !!wellName) %>%
pull(stat)
return(return_stat)
}
get_psi <-  function(wellName, dateTime){
return_stat <- wellData %>%
filter(Well == !!wellName) %>%
filter(DateTime == !!dateTime) %>%
pull(PSI)
return(return_stat)
}
# Variables to edit
well = "PH6"
date = "2015-12-28"
hourStart = "12"
hourEnd = "13"
handReading_ft = 4.36
handReading_minute = 21
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60)
y <- c(min_val, max_val)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
# filter(Well == well) %>%
# filter(DateTime == dateTime) %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
wellSelect
View(wellSelect)
# Variables to edit
well = "PH6"
date = "2019-04-29"
hourStart = "12"
hourEnd = "13"
handReading_ft = 1.78
handReading_minute = 35
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60)
y <- c(min_val, max_val)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
# filter(Well == well) %>%
# filter(DateTime == dateTime) %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
wellSelect
View(wellSelect)
wellSelect
# Variables to edit
well = "PH6"
date = "2019-12-13"
hourStart = "12"
hourEnd = "13"
handReading_ft = 3.45
handReading_minute = 55
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60) # values in minutes start and end
y <- c(min_val, max_val) # values in PSI, start and end
# Variables to edit
well = "PH6"
date = "2019-10-04"
hourStart = "12"
hourEnd = "13"
handReading_ft = 2.98
handReading_minute = 24
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60) # values in minutes start and end
y <- c(min_val, max_val) # values in PSI, start and end
# solve for y1 (water depth at hand read time in minutes)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
wellSelect
View(wellSelect)
hourEnd = "13"
# Variables to edit
well = "PH6"
date = "2019-10-04"
hourStart = "12"
hourEnd = "13"
handReading_ft = 2.98
handReading_minute = 24
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60) # values in minutes start and end
y <- c(min_val, max_val) # values in PSI, start and end
# solve for y1 (water depth at hand read time in minutes)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
wellSelect
# Variables to edit
well = "PH6"
date = "2019-10-04"
hourStart = "12"
hourEnd = "13"
handReading_ft = 2.98
handReading_minute = 24
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60) # values in minutes start and end
y <- c(min_val, max_val) # values in PSI, start and end
# solve for y1 (water depth at hand read time in minutes)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
kable(wellSelect)
?kable
library(knitr)
# Variables to edit
well = "PH6"
date = "2019-10-04"
hourStart = "12"
hourEnd = "13"
handReading_ft = 2.98
handReading_minute = 24
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60) # values in minutes start and end
y <- c(min_val, max_val) # values in PSI, start and end
# solve for y1 (water depth at hand read time in minutes)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
kable(wellSelect)
install.packages("kableExtra ")
View(wellSelect)
library(tidyverse)
library(tidyverse)
library(readxl)
library(lubridate)
library(glue)
library(knitr)
wellData <- read_csv("All_well_data_combined.csv",
col_types = cols(`Barometric Pressure (PSI)` = col_skip(),
`Date and Time` = col_datetime(format = "%m/%d/%Y %H:%M:%S %p"),
`Depth (ft)` = col_skip(),
Seconds = col_skip(),
`Temperature (C)` = col_skip(),
`Unnamed: 5` = col_skip(),
`Unnamed: 6` = col_skip()))
# Rename the fields
names(wellData) <- c('DateTime', 'PSI', 'Well' )
# Format the date field
wellData$Date <- format(wellData$DateTime, "%m-%d-%Y")
library(lubridate)
library(glue)
library(knitr)
wellData <- read_csv("All_well_data_combined.csv",
col_types = cols(`Barometric Pressure (PSI)` = col_skip(),
`Date and Time` = col_datetime(format = "%m/%d/%Y %H:%M:%S %p"),
`Depth (ft)` = col_skip(),
Seconds = col_skip(),
`Temperature (C)` = col_skip(),
`Unnamed: 5` = col_skip(),
`Unnamed: 6` = col_skip()))
# Rename the fields
names(wellData) <- c('DateTime', 'PSI', 'Well' )
# Format the date field
wellData$Date <- format(wellData$DateTime, "%m-%d-%Y")
wellData$Date<- as.Date(wellData$Date, format="%m-%d-%Y")
# Get the stats for each well needed to perform the calculations
well_stats <- read_excel("Well Stats.xlsx")
# Function to extract stats from the well stats table
get_stat <- function(stat, wellName){
return_stat <- well_stats %>%
filter(Well == !!wellName) %>%
pull(stat)
return(return_stat)
}
# Get the stats for each well needed to perform the calculations
well_stats <- read_excel("Well Stats.xlsx")
# Function to extract stats from the well stats table
get_stat <- function(stat, wellName){
return_stat <- well_stats %>%
filter(Well == !!wellName) %>%
pull(stat)
return(return_stat)
}
get_psi <-  function(wellName, dateTime){
return_psi <- wellData %>%
filter(Well == !!wellName) %>%
filter(DateTime == !!dateTime) %>%
pull(PSI)
return(return_psi)
}
get_psi <-  function(wellName, dateTime){
return_psi <- wellData %>%
filter(Well == !!wellName) %>%
filter(DateTime == !!dateTime) %>%
pull(PSI)
return(return_psi)
}
# Variables to edit
well = "PH6"
date = "2019-02-08"
hourStart = "11"
hourEnd = "12"
date = "2019-02-08"
hourStart = "11"
hourEnd = "12"
handReading_ft =1.33
handReading_minute = 47
handReading_ft =1.33
handReading_minute = 47
options(scipen=999)
options(scipen=999)
dateTime_start = ymd_hms(glue("{date}-{hourStart}-00-00"))
dateTime_end = ymd_hms(glue("{date}-{hourEnd}-00-00"))
psi_start <- get_psi(well, dateTime_start)
psi_end <- get_psi(well, dateTime_end)
max_val <- max(psi_start, psi_end)
min_val <- min(psi_start, psi_end)
x <- c(0, 60) # values in minutes start and end
y <- c(min_val, max_val) # values in PSI, start and end
# solve for y1 (water depth at hand read time in minutes)
psi_interpolated <- approx(x, y, xout = handReading_minute)
working_table <- tribble(
~dateTime_start, ~dateTime_end, ~psi_start,~psi_end, ~interpolated_PSI,
dateTime_start, dateTime_end, psi_start, psi_end, psi_interpolated[["y"]])
tow <- get_stat("tow", well)
toc <- get_stat("toc", well)
dgs <- get_stat("dgs", well)
fbgs <- get_stat("fbgs", well)
# Select just the well needed, and perform the calculations into new fields
wellSelect <- working_table %>%
mutate(WaterTableElevM = tow-toc+interpolated_PSI*0.703772,
GroundSurfaceElev = dgs,
FtBelowGS = fbgs,
HandReading_m = handReading_ft * 0.3048,
HandReadWaterTableElev = tow - HandReading_m,
Difference_m = abs(WaterTableElevM - HandReadWaterTableElev),
Difference_cm = Difference_m*100)
kable(wellSelect)
View(wellSelect)
